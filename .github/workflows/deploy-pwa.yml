name: Deploy PWA to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - master # Replace 'main' with your default branch name if different (e.g., master)

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # Specify the Node.js version your project uses
          node-version: '20' # Or '18', '16', etc.
          # Cache npm dependencies for faster builds
          cache: 'npm' # Use 'yarn' if your project uses Yarn

      - name: Install dependencies
        # Use 'npm ci' for cleaner installs in CI, or 'yarn install --frozen-lockfile' for Yarn
        run: npm ci

      - name: Build PWA
        # Replace 'npm run build' with your project's actual build command
        # If your PWA is not served from the root of the domain (e.g. username.github.io/repo-name/),
        # you might need to set a base path. This is often done in your PWA's build configuration
        # (e.g., vite.config.js, vue.config.js) or via an environment variable like PUBLIC_URL.
        # Example of setting an env var for the build step:
        # env:
        #   PUBLIC_URL: /your-repo-name
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the directory produced by your build process
          path: './dist' # Replace 'dist' with your build output directory (e.g., 'build', 'public')

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
